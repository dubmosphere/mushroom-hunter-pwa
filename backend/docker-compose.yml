version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: mushroom-hunter-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-mushroom_hunter}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mushroom-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mushroom-hunter-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-5000}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-mushroom_hunter}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:5173}
    ports:
      - "${PORT:-5000}:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mushroom-network
    # Uncomment volumes below for development hot-reload
    # volumes:
    #   - ./src:/app/src
    #   - node_modules:/app/node_modules

networks:
  mushroom-network:
    driver: bridge

volumes:
  postgres_data:
