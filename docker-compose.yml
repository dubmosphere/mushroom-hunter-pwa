version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: mushroom-hunter-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-mushroom_hunter}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mushroom-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mushroom-hunter-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${BACKEND_PORT:-5000}
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-mushroom_hunter}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:5173}
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mushroom-network
    volumes:
      # Mount import directory for CSV data
      - ./backend/import:/app/import:ro

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mushroom-hunter-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:5000}
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    depends_on:
      - backend
    networks:
      - mushroom-network
    volumes:
      # Mount source for hot-reload during development
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/vite.config.js:/app/vite.config.js

networks:
  mushroom-network:
    driver: bridge

volumes:
  postgres_data:
